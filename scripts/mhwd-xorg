#!/bin/bash

PARAM=$#
MHWDXORGCONF="/etc/X11/xorg.conf.d/90-mhwd.conf"
CHECKCONFIG="false"
SETXORGCONF=""



# param 1: Xorg configuration file
set_xorg()
{
	if [ ! -e "$1" ]; then
		echo "error: could not find symlink target '$1'!" 1>&2
		exit 1
	fi

	if [ -e "${MHWDXORGCONF}" ]; then
		rm "${MHWDXORGCONF}"
	fi

	ln -sf "$1" "${MHWDXORGCONF}"
	echo "xorg configuration file: '$1'"
}


print_link_destination_if_exists()
{
	if [ -e "$1" ]; then
		echo "$2 '$(readlink "$1")'"
	else
		echo "warning: invalid symlink '$1'!"
	fi
}

print_status()
{
	echo ":: status"
	print_link_destination_if_exists "${MHWDXORGCONF}" " xorg configuration file:"
}

print_help()
{
	echo "mhwd-xorg [OPTION] [...]"
	echo ""
	echo "   -h --help                          show help"
	echo "   -s --status                        show current status"
	echo "   -x --setxorg [PATH]                set xorg configuration file"
	echo ""
}


if [ "${PARAM}" -lt 1 ]; then
	print_status
	exit 0
fi

for (( I=1; $I <= $PARAM; I++ ))
do
	case "$1" in
		-h|--help)
			print_help
			exit 0
			;;
		-s|--status)
			print_status
			exit 0
			;;
		-x|--setxorg)
			shift
			SETXORGCONF="$1"

			if [ "$SETXORGCONF" == "" ]; then
				echo "error: invalid argument" 1>&2
				exit 1
			fi
			;;
		"") ;;
		*)
			echo "error: invalid argument: $1" 1>&2
			echo ""
			print_help
			exit 1
			;;
	esac

	shift
done


# Set xorg configuration file
if [ "${SETXORGCONF}" != "" ]; then
	# Check root
	if [[ $EUID -ne 0 ]]; then
	   echo "error: you cannot perform this operation unless you are root." 1>&2
	   exit 1
	fi

	set_xorg "${SETXORGCONF}"
fi


exit 0
