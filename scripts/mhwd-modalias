#!/bin/bash
#
# Parser for modalias
#
# Written by Culinax

# Store module in variable
module="$1"

# Create function to check if a value ($1) exists in an array ($2)
in_array() {
    local i
    for i in "${@:2}"; do
        [[ $i = $1 ]] && return 0
    done
    return 1
}

# Analyze the output of modinfo $modalias and save it in a variable as an
# easily workable output.
modalias="$(modinfo "$module" | grep alias: | sed -r \
    's|.* ([0-9a-z]*):v([0-9A-Z*]*)d([0-9A-Z*]*)sv([0-9A-Z*]*)sd([0-9A-Z*]*)bc([0-9A-Z*]*)sc([0-9A-Z*]*)i([0-9A-Z*]*)|\1 \2 \3 \4 \5 \6 \7 \8|g')"

# Initiate arrays to store information in (a = information from All aliases)
aid=()
av=()
ad=()
asv=()
asd=()
abc=()
asc=()
ai=()

# Class ID (= bc + sc)
cid=()

# Iterate over the output of modalias and store everything in the appropriate
# array (m = information from each Modalias line). Also make sure that
# duplicates are avoided by checking with in_array, and that the 4 leading
# zeros of the hex numbers are removed
while read -r mid mv md msv msd mbc msc i; do
    in_array "$mid" "${aid[@]}" || aid+=("$mid")
    in_array "${mv#0000}" "${av[@]}" || av+=("${mv#0000}")
    in_array "${md#0000}" "${ad[@]}" || ad+=("${md#0000}")
    in_array "${msv#0000}" "${asv[@]}" || asv+=("${msv#0000}")
    in_array "${msd#0000}" "${asd[@]}" || asd+=("${msd#0000}")
    in_array "$mbc" "${abc[@]}" || abc+=("$mbc")
    in_array "$msc" "${asc[@]}" || asc+=("$msc")
    in_array "$i" "${ai[@]}" || ai+=("$i")

    in_array "$mbc$msc" "${cid[@]}" || cid+=("$mbc$msc")
done <<< "$modalias"

# Echo the necessary information
echo "CLASSIDS=\"${cid[@]}\""
echo "VENDORIDS=\"${av[@]}\""
echo "DEVICEIDS=\"${ad[@]}\""
