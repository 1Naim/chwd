#!/bin/bash


### Variables ###

XORG_FILE="/etc/X11/xorg.conf"
XORG_WORK="/etc/X11/xorg.conf.plain"
XORG_BACKUP="/etc/X11/xorg.conf.backup"
HOOKARGUMENT="$XORG_WORK"


function ltrim() { echo "$1" | sed -e "s/^ *//" | sed -e "s/\n//"; }
function rtrim() { echo "$1" | sed -e "s/ *$//" | sed -e "s/\n//"; }
function trim() { x="$(ltrim "$1")"; echo "$(rtrim "$x")"; }


mhwd_Xorg_Configure()
{
	LANG=C /usr/bin/Xorg -configure :9 &>> /tmp/xorg_detection.log

	if [ -e /xorg.conf.new ]; then
		mv /xorg.conf.new "$XORG_WORK"
	elif [ -e /root/xorg.conf.new ]; then
		mv /root/xorg.conf.new "$XORG_WORK"
	elif [ -e ~/xorg.conf.new ]; then
		mv ~/xorg.conf.new "$XORG_WORK"
	elif [ -e /etc/X11/xorg.conf.new ]; then
		mv /etc/X11/xorg.conf.new "$XORG_WORK"
	else
		echo "Error! Could not find xorg.conf.new. 'Xorg -configure' could have failed."
		exit 1
  	fi
}


mhwd_add_DRI()
{
	# only for free drivers
	sed -i /'Section "Device"'/,/'EndSection'/s/'EndSection'/"\tOption      \"DRI\"    \"true\"\nEndSection"/g "$XORG_WORK"

	echo 'Section "DRI"' >> "$XORG_WORK"
	echo '        Group  "video"' >> "$XORG_WORK"
	echo '        Mode   0666' >> "$XORG_WORK"
	echo 'EndSection' >> "$XORG_WORK"
	echo ' ' >> "$XORG_WORK"
}



mhwd_add_Compositing()
{
	echo ' ' >> "$XORG_WORK"
	echo 'Section "Extensions"' >> "$XORG_WORK"
	echo '	Option "Composite" "Enable"' >> "$XORG_WORK"
	echo '	Option "RENDER"    "Enable"' >> "$XORG_WORK"
	echo 'EndSection' >> "$XORG_WORK"
	echo ' ' >> "$XORG_WORK"
}


mhwd_add_Backspace()
{
	echo ' ' >> "$XORG_WORK"
	echo 'Section "InputClass"' >> "$XORG_WORK"
	echo '	Identifier          "Keyboard Defaults"' >> "$XORG_WORK"
	echo '	MatchIsKeyboard	    "yes"' >> "$XORG_WORK"
	echo '	Option              "XkbOptions" "terminate:ctrl_alt_bksp"' >> "$XORG_WORK"
	echo 'EndSection' >> "$XORG_WORK"
}


check_if_driver_used()
{
	local first_device_driver="$(echo "$(trim "${XORGDEVICEDRIVER}")" | sed 's| .*||g')"
	local xorg_device_drivers="$(sed -n '/Section.*\"Device\"/,/EndSection/{ p }' "${XORG_WORK}" | sed 's|#.*||g' | grep Driver | sed 's|Driver||g' | sed 's| ||g' | sed 's|\"||g' | sed 's|\t||g')"

	local found="no"

	# Check if the drivers in xorg.conf are right
	for xorg_device_driver in ${xorg_device_drivers} ; do
		found="no"

		for device_driver in ${XORGDEVICEDRIVER} ; do
			if [ "$xorg_device_driver" == "$device_driver" ]; then
				found="yes"
				break
			fi
		done

		if [ "${found}" == "no" ]; then
			break
		fi
	done

	# Seems so X -configure used a wrong driver. Change it!
	if [ "$found" == "no" ]; then
		sed -i /'Section.*"Device"'/,/'EndSection'/s/'Driver.*'/"Driver      \"${first_device_driver}\""/g ${XORG_WORK}
	fi
}


visual_cleanup()
{
	# visual cleanup ;)
	# at first, remove all empty lines
	sed -i '/^$/d' "$XORG_WORK"
	# and add a new empty line after every EndSection
	sed -i '/EndSection/G' "$XORG_WORK"
}


move_Xorg_Config()
{
	if [ -e "$XORG_BACKUP" ]; then
		rm -rf "$XORG_BACKUP" &>/dev/null
	fi
	if [ -e "$XORG_FILE" ]; then
		mv "$XORG_FILE" "$XORG_BACKUP" &>/dev/null
	fi

	# at last, copy the new xorg.conf where it belongs
	mv "$XORG_WORK" "$XORG_FILE" &>/dev/null
}


make_inicpio()
{
	mkinitcpio -p linux
}



mhwd_checkinstalled()
{
	local xorg_device_drivers="$(sed -n '/Section.*\"Device\"/,/EndSection/{ p }' "${XORG_FILE}" | sed 's|#.*||g' | grep Driver | sed 's|Driver||g' | sed 's| ||g' | sed 's|\"||g' | sed 's|\t||g')"

	# Check if the drivers in xorg.conf are right
	for xorg_device_driver in ${xorg_device_drivers} ; do
		for device_driver in ${XORGDEVICEDRIVER} ; do
			if [ "$xorg_device_driver" == "$device_driver" ]; then
				return 0
			fi
		done
	done

	return 1
}



# Make them readonly
declare -fr move_Xorg_Config visual_cleanup mhwd_add_Backspace mhwd_add_Compositing mhwd_add_DRI mhwd_Xorg_Configure check_if_driver_used make_inicpio mhwd_checkinstalled


## Add the hooks

add_local_after_configure_hook "check_if_driver_used visual_cleanup move_Xorg_Config make_inicpio"
add_checkinstall_hook mhwd_checkinstalled

